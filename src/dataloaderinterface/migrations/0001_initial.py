# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-12-14 17:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceRegistration',
            fields=[
                ('registration_id', models.AutoField(db_column='RegistrationID', primary_key=True, serialize=False)),
                ('deployment_sampling_feature_uuid', models.UUIDField(db_column='SamplingFeatureUUID')),
                ('authentication_token', models.CharField(db_column='AuthenticationToken', editable=False, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='HydroShareSiteSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('M', 'manual'), ('S', 'scheduled')], default='manual', max_length=255)),
                ('resource_id', models.CharField(blank=True, max_length=255)),
                ('update_freq', models.DurationField(default='0 days', verbose_name='Update Frequency')),
                ('is_enabled', models.BooleanField(default=False)),
                ('last_sync_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'hydro_share_site_sharing',
            },
        ),
        migrations.CreateModel(
            name='HydroShareSyncLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_date', models.DateTimeField(auto_now_add=True)),
                ('sync_type', models.CharField(choices=[('M', 'manual'), ('S', 'scheduled')], default='manual', max_length=255)),
                ('site_sharing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataloaderinterface.HydroShareSiteSetting')),
            ],
            options={
                'db_table': 'hydro_share_sync_log',
            },
        ),
        migrations.CreateModel(
            name='HydroShareUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_nickname', models.CharField(max_length=255)),
                ('access_token', models.CharField(blank=True, default='', max_length=255)),
                ('refresh_token', models.CharField(blank=True, default='', max_length=255)),
                ('is_enabled', models.BooleanField(default=False)),
                ('token_expires_in', models.IntegerField(default=0)),
                ('oauth_scope', models.CharField(default='read write', max_length=255)),
            ],
            options={
                'db_table': 'hydro_share_user',
            },
        ),
        migrations.CreateModel(
            name='ODM2User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affiliation_id', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiteRegistration',
            fields=[
                ('registration_id', models.AutoField(db_column='RegistrationID', primary_key=True, serialize=False)),
                ('registration_token', models.CharField(db_column='RegistrationToken', editable=False, max_length=64, unique=True)),
                ('registration_date', models.DateTimeField(db_column='RegistrationDate')),
                ('affiliation_id', models.IntegerField(db_column='AffiliationID')),
                ('person', models.CharField(db_column='Person', max_length=765)),
                ('organization', models.CharField(blank=True, db_column='Organization', max_length=255, null=True)),
                ('sampling_feature_id', models.IntegerField(db_column='SamplingFeatureID')),
                ('sampling_feature_code', models.CharField(db_column='SamplingFeatureCode', max_length=50, unique=True)),
                ('sampling_feature_name', models.CharField(blank=True, db_column='SamplingFeatureName', max_length=255)),
                ('elevation_m', models.FloatField(blank=True, db_column='Elevation', null=True)),
                ('latitude', models.FloatField(db_column='Latitude')),
                ('longitude', models.FloatField(db_column='Longitude')),
                ('site_type', models.CharField(db_column='SiteType', max_length=765)),
                ('django_user', models.ForeignKey(db_column='User', on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to=settings.AUTH_USER_MODEL)),
                ('followed_by', models.ManyToManyField(related_name='followed_sites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_id', models.IntegerField(db_column='ResultID', unique=True)),
                ('result_uuid', models.UUIDField(db_column='ResultUUID', default=uuid.uuid4, editable=False, unique=True)),
                ('model_name', models.CharField(db_column='ModelName', max_length=255)),
                ('model_manufacturer', models.CharField(db_column='ModelManufacturer', max_length=255)),
                ('variable_name', models.CharField(db_column='VariableName', max_length=255)),
                ('variable_code', models.CharField(db_column='VariableCode', max_length=50)),
                ('unit_name', models.CharField(db_column='UnitsName', max_length=255)),
                ('unit_abbreviation', models.CharField(db_column='UnitAbbreviation', max_length=255)),
                ('sampled_medium', models.CharField(db_column='SampledMedium', max_length=255)),
                ('last_measurement_id', models.IntegerField(blank=True, db_column='LastMeasurementID', null=True, unique=True)),
                ('activation_date', models.DateTimeField(blank=True, db_column='ActivationDate', null=True)),
                ('activation_date_utc_offset', models.IntegerField(blank=True, db_column='ActivationDateUtcOffset', null=True)),
                ('registration', models.ForeignKey(db_column='RegistrationID', on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='dataloaderinterface.SiteRegistration')),
            ],
        ),
        migrations.AddField(
            model_name='hydroshareuser',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='dataloaderinterface.ODM2User'),
        ),
        migrations.AddField(
            model_name='hydrosharesitesetting',
            name='hs_user',
            field=models.ForeignKey(db_column='hs_user_id', on_delete=django.db.models.deletion.CASCADE, to='dataloaderinterface.HydroShareUser'),
        ),
        migrations.AddField(
            model_name='hydrosharesitesetting',
            name='site_registration',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dataloaderinterface.SiteRegistration'),
        ),
        migrations.AddField(
            model_name='deviceregistration',
            name='user',
            field=models.ForeignKey(db_column='User', on_delete=django.db.models.deletion.CASCADE, to='dataloaderinterface.ODM2User'),
        ),
    ]
